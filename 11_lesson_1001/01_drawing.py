import pygame as pg
from pygame.draw import rect, circle, polygon


FPS = 30  # переменная отвечает за количество кадров в секунду

# настроим окошко программы
screen = pg.display.set_mode((640, 480))  # 640px в ширину и 480px в высоту
clock = pg.time.Clock()  # отвечает за сменяемость кадров
pg.display.set_caption('Моя первая игра на PyGame')  # название окошка
finished = False  # флаг, отвечающий за работу игры

screen.fill((240, 255, 255))  # заливаю экран цветом

# нарисуем прямоугольник
rect(screen, (87, 255, 87), [210, 250, 120, 80])
rect(screen, (128, 0, 128), [203, 243, 134, 94], 7)
# где_рисуем, (цвет), [х, у, ширина, высота], толщина_линии

# нарисуем треугольник
polygon(screen, (255, 197, 82), [[348, 290], [460, 230], [510, 290]])
polygon(screen, (255, 197, 82), [[110, 110], [160, 40], [210, 110]], 3)
# где_рисуем, (цвет), [[x1, y1], [x2, y2], [x3, y3]], толщина_линии]

# нарисуем круг
circle(screen, (143, 143, 255), [400, 100], 100)
circle(screen, (0, 0, 245), [400, 100], 80)
# где_рисуем, (цвет), [x, y], диаметр

# нарисуем мишень
for i in range(50, 1, -10):
    color = (0, 0, 0)
    circle(screen, color, [500, 320], i / 2, 4)

for i in range(15):
    rect(screen, (0, 0, 245), [i * 50, 360, 45, 45])

# если до начала цикла надо что-то отобразить
pg.display.update()  # обновляем экран

while not finished:  # пока игра не окончена

    clock.tick(FPS)  # задержка

    for event in pg.event.get():  # для каждого события в очереди событий
        if event.type == pg.QUIT:  # если нажали на крестик
            finished = True

    pg.display.update()  # обновляем экран внутри цикла программы

